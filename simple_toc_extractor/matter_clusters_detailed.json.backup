{
  "extraction_info": {
    "total_clusters": 5,
    "pdf_source": "..\\Matter-1.4-Application-Cluster-Specification.pdf",
    "extraction_timestamp": "2025-08-09T22:14:22.455345"
  },
  "clusters": [
    {
      "cluster_info": {
        "cluster_name": "Identify",
        "cluster_id": "0x0003",
        "classification": {
          "hierarchy": "Base",
          "role": "Utility",
          "scope": "Endpoint",
          "pics_code": "I"
        },
        "revision_history": [
          {
            "revision": "1",
            "description": "Mandatory global ClusterRevision attribute added",
            "date": null
          },
          {
            "revision": "2",
            "description": "CCB 2808",
            "date": null
          },
          {
            "revision": "3",
            "description": "All Hubs changes",
            "date": null
          },
          {
            "revision": "4",
            "description": "New data model format and notation; add IdentifyType",
            "date": null
          },
          {
            "revision": "5",
            "description": "Removed Query feature",
            "date": null
          }
        ],
        "features": [],
        "data_types": [
          {
            "name": "IdentifyTypeEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0x00",
                "name": "None",
                "summary": "No presentation.",
                "conformance": "M"
              },
              {
                "value": "0x01",
                "name": "LightOutput",
                "summary": "Light output of a lighting product.",
                "conformance": "M"
              },
              {
                "value": "0x02",
                "name": "VisibleIndicator",
                "summary": "Typically a small LED.",
                "conformance": "M"
              },
              {
                "value": "0x03",
                "name": "AudibleBeep",
                "summary": null,
                "conformance": "M"
              },
              {
                "value": "0x04",
                "name": "Display",
                "summary": "Presentation will be visible on display screen.",
                "conformance": "M"
              },
              {
                "value": "0x05",
                "name": "Actuator",
                "summary": "Presentation will be conveyed by actuator functionality such as through a window blind operation or in-wall relay.",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "EffectIdentifierEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0x00",
                "name": "Blink",
                "summary": "e.g., Light is turned on/off once.",
                "conformance": "M"
              },
              {
                "value": "0x01",
                "name": "Breathe",
                "summary": "e.g., Light is turned on/off over 1 second and repeated 15 times.",
                "conformance": "M"
              },
              {
                "value": "0x02",
                "name": "Okay",
                "summary": "e.g., Colored light turns green for 1 second; non-colored light flashes twice.",
                "conformance": "M"
              },
              {
                "value": "0x0B",
                "name": "ChannelChange",
                "summary": "e.g., Colored light turns orange for 8 seconds; non-colored light switches to the maximum brightness for 0.5s and then minimum brightness for 7.5s.",
                "conformance": "M"
              },
              {
                "value": "0xFE",
                "name": "FinishEffect",
                "summary": "Complete the current effect sequence before terminating. e.g., if in the middle of a breathe effect (as above), first complete the current 1s breathe effect and then terminate the effect.",
                "conformance": "M"
              },
              {
                "value": "0xFF",
                "name": "StopEffect",
                "summary": "Terminate the effect as soon as possible.",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "EffectVariantEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": []
          }
        ],
        "attributes": [
          {
            "id": "0x0000",
            "name": "IdentifyTime",
            "type": "uint16",
            "constraint": "all",
            "quality": "0",
            "default": "0",
            "access": "RW VO",
            "conformance": "M",
            "summary": "This attribute SHALL represent the remaining length of time, in seconds, that the endpoint will continue to identify itself. If this attribute is set to a value other than 0 then the device SHALL enter its identification state, in order to indicate to an observer which of several nodes and/or endpoints it is. It is RECOMMENDED that this state consists of flashing a light with a period of 0.5 seconds. The IdentifyTime attribute SHALL be decremented every second while in this state. If this attribute reaches or is set to the value 0 then the device SHALL terminate its identification state.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0001",
            "name": "IdentifyType",
            "type": "IdentifyTypeEnum",
            "constraint": "desc",
            "quality": "MS",
            "default": null,
            "access": "R V",
            "conformance": "M",
            "summary": "This attribute SHALL indicate how the identification state is presented to the user. This attribute SHALL contain one of the values defined in IdentifyTypeEnum. The value None SHALL NOT be used if the device is capable of presenting its identification state using one of the other methods defined in IdentifyTypeEnum.",
            "fabric_sensitive": false,
            "scene_capable": false
          }
        ],
        "commands": [
          {
            "id": "0x00",
            "name": "Identify",
            "direction": "client⇒server",
            "response": "Y",
            "access": "M",
            "conformance": "M",
            "summary": "This command starts or stops the receiving device identifying itself.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "IdentifyTime",
                "type": "uint16",
                "constraint": "all",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL indicate the length of time, in seconds, that the endpoint will continue to identify itself."
              }
            ]
          },
          {
            "id": "0x40",
            "name": "TriggerEffect",
            "direction": "client⇒server",
            "response": "Y",
            "access": "M",
            "conformance": "O",
            "summary": "This command allows the support of feedback to the user, such as a certain light effect. It is used to allow an implementation to provide visual feedback to the user under certain circumstances such as a color light turning green when it has successfully connected to a network. The use of this command and the effects themselves are entirely up to the implementer to use whenever a visual feedback is useful but it is not the same as and does not replace the identify mechanism used during commissioning.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "EffectIdentifier",
                "type": "EffectIdentifierEnum",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL indicate the identify effect to use and SHALL contain one of the non-reserved values in EffectIdentifierEnum. All values of the EffectIdentifierEnum SHALL be supported. Implementors MAY deviate from the example light effects in EffectIdentifierEnum, but they SHOULD indicate during testing how they handle each effect."
              },
              {
                "id": "1",
                "name": "EffectVariant",
                "type": "EffectVariantEnum",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL indicate which variant of the effect, indicated in the EffectIdentifier field, SHOULD be triggered. If a device does not support the given variant, it SHALL use the default variant. This field SHALL contain one of the values in EffectVariantEnum."
              }
            ]
          }
        ],
        "events": [],
        "global_attributes": []
      },
      "metadata": {
        "source_pages": "26-31",
        "extraction_method": "RAG",
        "text_length": 14490,
        "section_number": "1.2",
        "category": "General"
      }
    },
    {
      "cluster_info": {
        "cluster_name": "Groups",
        "cluster_id": "0x0004",
        "classification": {
          "hierarchy": "Base",
          "role": "Utility",
          "scope": "Endpoint",
          "pics_code": "G"
        },
        "revision_history": [
          {
            "revision": "1",
            "description": "Mandatory global ClusterRevision attribute added; CCB 1745 2100"
          },
          {
            "revision": "2",
            "description": "CCB 2289"
          },
          {
            "revision": "3",
            "description": "CCB 2310 2704"
          },
          {
            "revision": "4",
            "description": "New data model format and notation"
          }
        ],
        "features": [
          {
            "bit": "0",
            "code": "GN",
            "name": "GroupNames",
            "summary": "The ability to store a name for a group.",
            "conformance": "M",
            "dependencies": null
          }
        ],
        "data_types": [
          {
            "name": "NameSupportBitmap",
            "base_type": "map8",
            "constraint": null,
            "values": [
              {
                "value": "7",
                "name": "GroupNames",
                "summary": "The ability to store a name for a group.",
                "conformance": "M"
              }
            ]
          }
        ],
        "attributes": [
          {
            "id": "0x0000",
            "name": "NameSupport",
            "type": "NameSupportBitmap",
            "constraint": "desc",
            "quality": "F",
            "default": "0",
            "access": "R V",
            "conformance": "M",
            "summary": "This attribute provides legacy, read-only access to whether the Group Names feature is supported. The most significant bit, bit 7 (GroupNames), SHALL be equal to bit 0 of the FeatureMap attribute (GN Feature). All other bits SHALL be 0.",
            "fabric_sensitive": true,
            "scene_capable": false
          }
        ],
        "commands": [
          {
            "id": "0x00",
            "name": "AddGroup",
            "direction": "client⇒server",
            "response": "AddGroupResponse",
            "access": "M F",
            "conformance": "M",
            "summary": "The AddGroup command allows a client to add group membership in a particular group for the server endpoint.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "GroupID",
                "type": "group-id",
                "constraint": "min 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL be used to identify the group and any associated key material to which the server endpoint is to be added."
              },
              {
                "id": "1",
                "name": "GroupName",
                "type": "string",
                "constraint": "max 16",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field MAY be set to a human-readable name for the group. If the client has no name for the group, the GroupName field SHALL be set to the empty string. Support of group names is optional and is indicated by the FeatureMap and NameSupport attribute."
              }
            ]
          },
          {
            "id": "0x01",
            "name": "ViewGroup",
            "direction": "client⇒server",
            "response": "ViewGroupResponse",
            "access": "O F",
            "conformance": "M",
            "summary": "The ViewGroup command allows a client to request that the server responds with a ViewGroupResponse command containing the name string for a particular group.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "GroupID",
                "type": "group-id",
                "constraint": "min 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x02",
            "name": "GetGroupMembership",
            "direction": "client⇒server",
            "response": "GetGroupMembershipResponse",
            "access": "O F",
            "conformance": "M",
            "summary": "The GetGroupMembership command allows a client to inquire about the group membership of the server endpoint, in a number of ways.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "GroupList",
                "type": "list[group-id]",
                "constraint": "all[min 1]",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x03",
            "name": "RemoveGroup",
            "direction": "client⇒server",
            "response": "RemoveGroupResponse",
            "access": "M F",
            "conformance": "M",
            "summary": "The RemoveGroup command allows a client to request that the server removes the membership for the server endpoint, if any, in a particular group.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "GroupID",
                "type": "group-id",
                "constraint": "min 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x04",
            "name": "RemoveAllGroups",
            "direction": "client⇒server",
            "response": "Y",
            "access": "M F",
            "conformance": "M",
            "summary": "The RemoveAllGroups command allows a client to direct the server to remove all group associations for the server endpoint.",
            "timing": null,
            "fields": []
          },
          {
            "id": "0x05",
            "name": "AddGroupIfIdentifying",
            "direction": "client⇒server",
            "response": "Y",
            "access": "M F",
            "conformance": "M",
            "summary": "The AddGroupIfIdentifying command allows a client to add group membership in a particular group for the server endpoint, on condition that the endpoint is identifying itself. Identifying functionality is controlled using the Identify cluster, (see Identify Cluster).",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "GroupID",
                "type": "group-id",
                "constraint": "min 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL be used to identify the group and any associated key material to which the server endpoint is to be added."
              },
              {
                "id": "1",
                "name": "GroupName",
                "type": "string",
                "constraint": "max 16",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field MAY be set to a human-readable name for the group. If the client has no name for the group, the GroupName field SHALL be set to the empty string. Support of group names is optional and is indicated by the FeatureMap and NameSupport attribute."
              }
            ]
          },
          {
            "id": "0x00",
            "name": "AddGroupResponse",
            "direction": "client⇐server",
            "response": "N",
            "access": "M",
            "conformance": "M",
            "summary": "The AddGroupResponse is sent by the Groups cluster server in response to an AddGroup command.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "Status",
                "type": "enum8",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is set according to the Effect on Receipt section of the AddGroup command."
              },
              {
                "id": "1",
                "name": "GroupID",
                "type": "group-id",
                "constraint": "min 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is set to the GroupID field of the received AddGroup command."
              }
            ]
          },
          {
            "id": "0x01",
            "name": "ViewGroupResponse",
            "direction": "client⇐server",
            "response": "N",
            "access": "M",
            "conformance": "M",
            "summary": "The ViewGroupResponse command is sent by the Groups cluster server in response to a ViewGroup command.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "Status",
                "type": "enum8",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is according to the Effect on Receipt section of the ViewGroup command."
              },
              {
                "id": "1",
                "name": "GroupID",
                "type": "group-id",
                "constraint": "min 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is set to the GroupID field of the received ViewGroup command."
              },
              {
                "id": "2",
                "name": "GroupName",
                "type": "string",
                "constraint": "max 16",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "If the status is SUCCESS, and group names are supported, this field is set to the group name associated with that group in the Group Table; otherwise it is set to the empty string."
              }
            ]
          },
          {
            "id": "0x02",
            "name": "GetGroupMembershipResponse",
            "direction": "client⇐server",
            "response": "N",
            "access": "M",
            "conformance": "M",
            "summary": "The GetGroupMembershipResponse command is sent by the Groups cluster server in response to a GetGroupMembership command.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "Capacity",
                "type": "uint8",
                "constraint": "all",
                "quality": "X",
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL contain the remaining capacity of the Group Table of the node."
              },
              {
                "id": "1",
                "name": "GroupList",
                "type": "list[group-id]",
                "constraint": "all[min 1]",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "The GroupList field SHALL contain either the group IDs of all the groups in the Group Table for which the server endpoint is a member of the group (in the case where the GroupList field of the received GetGroupMembership command was empty), or the group IDs of all the groups in the Group Table for which the server endpoint is a member of the group and for which the group ID was included in the the GroupList field of the received GetGroupMembership command (in the case where the GroupList field of the received GetGroupMembership command was not empty)."
              }
            ]
          },
          {
            "id": "0x03",
            "name": "RemoveGroupResponse",
            "direction": "client⇐server",
            "response": "N",
            "access": "M",
            "conformance": "M",
            "summary": "The RemoveGroupResponse command is generated by the server in response to the receipt of a RemoveGroup command.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "Status",
                "type": "enum8",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is according to the Effect on Receipt section of the RemoveGroup command."
              },
              {
                "id": "1",
                "name": "GroupID",
                "type": "group-id",
                "constraint": "min 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is set to the GroupID field of the received RemoveGroup command."
              }
            ]
          }
        ],
        "events": [],
        "global_attributes": []
      },
      "metadata": {
        "source_pages": "31-39",
        "extraction_method": "RAG",
        "text_length": 26136,
        "section_number": "1.3",
        "category": "General"
      }
    },
    {
      "cluster_info": {
        "cluster_name": "Scenes Management",
        "cluster_id": "0x0062",
        "classification": {
          "hierarchy": "Base",
          "role": "Application",
          "scope": "Endpoint",
          "pics_code": "S"
        },
        "revision_history": [
          {
            "revision": 1,
            "description": "Based on the ZCL Scenes Cluster, Updated the Cluster ID to 0x0062, the name to Scenes Management, removed the provisional status; Removed attributes SceneCount, CurrentScene, CurrentGroup, SceneValid, and NameSupport; Removed Explicit, TableSize and FabricScenes features; Removed EnhancedAddScene, EnhancedAddSceneResponse, EnhancedViewScene, EnhancedViewSceneResponse; TransitionTime field changed milliseconds in AddScene, ViewSceneResponse and RecallScene"
          }
        ],
        "features": [
          {
            "bit": 0,
            "code": "SN",
            "name": "SceneNames",
            "summary": "The ability to store a name for a scene.",
            "conformance": "O",
            "dependencies": null
          }
        ],
        "data_types": [
          {
            "name": "CopyModeBitmap",
            "base_type": "map8",
            "constraint": null,
            "values": [
              {
                "value": "0",
                "name": "CopyAllScenes",
                "summary": "Copy all scenes in the scene table",
                "conformance": null
              }
            ]
          },
          {
            "name": "SceneInfoStruct",
            "base_type": "struct",
            "constraint": null,
            "values": [
              {
                "value": 0,
                "name": "SceneCount",
                "type": "uint8",
                "constraint": "all",
                "quality": "all",
                "default": "0",
                "access": "R",
                "conformance": "M"
              },
              {
                "value": 1,
                "name": "CurrentScene",
                "type": "uint8",
                "constraint": "desc",
                "quality": "desc",
                "default": "0xFF",
                "access": "S",
                "conformance": "M"
              },
              {
                "value": 2,
                "name": "CurrentGroup",
                "type": "group-id",
                "constraint": "all",
                "quality": "all",
                "default": "0",
                "access": "S",
                "conformance": "M"
              },
              {
                "value": 3,
                "name": "SceneValid",
                "type": "bool",
                "constraint": "all",
                "quality": "all",
                "default": "False",
                "access": "S",
                "conformance": "M"
              },
              {
                "value": 4,
                "name": "RemainingCapacity",
                "type": "uint8",
                "constraint": "max 253",
                "quality": "MS",
                "default": null,
                "access": "R",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "AttributeValuePairStruct",
            "base_type": "struct",
            "constraint": null,
            "values": [
              {
                "value": 0,
                "name": "AttributeID",
                "type": "attribute-id",
                "constraint": "all",
                "conformance": "M"
              },
              {
                "value": 1,
                "name": "ValueUnsigned8",
                "type": "uint8",
                "constraint": "O.a",
                "conformance": null
              },
              {
                "value": 2,
                "name": "ValueSigned8",
                "type": "int8",
                "constraint": "O.a",
                "conformance": null
              },
              {
                "value": 3,
                "name": "ValueUnsigned16",
                "type": "uint16",
                "constraint": "O.a",
                "conformance": null
              },
              {
                "value": 4,
                "name": "ValueSigned16",
                "type": "int16",
                "constraint": "O.a",
                "conformance": null
              },
              {
                "value": 5,
                "name": "ValueUnsigned32",
                "type": "uint32",
                "constraint": "O.a",
                "conformance": null
              },
              {
                "value": 6,
                "name": "ValueSigned32",
                "type": "int32",
                "constraint": "O.a",
                "conformance": null
              },
              {
                "value": 7,
                "name": "ValueUnsigned64",
                "type": "uint64",
                "constraint": "O.a",
                "conformance": null
              },
              {
                "value": 8,
                "name": "ValueSigned64",
                "type": "int64",
                "constraint": "O.a",
                "conformance": null
              }
            ]
          },
          {
            "name": "ExtensionFieldSetStruct",
            "base_type": "struct",
            "constraint": null,
            "values": [
              {
                "value": 0,
                "name": "ClusterID",
                "type": "cluster-id",
                "constraint": "all",
                "conformance": "M"
              },
              {
                "value": 1,
                "name": "AttributeValueList",
                "type": "list[AttributeValuePairStruct]",
                "constraint": "desc",
                "conformance": "M"
              }
            ]
          }
        ],
        "attributes": [
          {
            "id": "0x0000",
            "name": "LastConfiguredBy",
            "type": "node-id",
            "constraint": "all",
            "quality": null,
            "default": "null",
            "access": "R",
            "conformance": "O",
            "summary": "This attribute SHALL indicate the Node ID of the node that last configured the Scene Table. The null value indicates that the server has not been configured, or that the identifier of the node that last configured the Scenes Management cluster is not known. The Node ID is scoped to the accessing fabric.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0001",
            "name": "SceneTableSize",
            "type": "uint16",
            "constraint": "desc",
            "quality": "F",
            "default": "16",
            "access": "R",
            "conformance": "M",
            "summary": "This attribute SHALL indicate the number of entries in the Scene Table on this endpoint. This is the total across all fabrics; note that a single fabric cannot use all those entries (see Handling of fabric-scoping). The minimum size of this table, (i.e., the minimum number of scenes to support across all fabrics per endpoint) SHALL be 16, unless a device type in which this cluster is used, defines a larger value in the device type definition.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0002",
            "name": "FabricSceneInfo",
            "type": "list[SceneInfoStruct]",
            "constraint": "desc",
            "quality": "R V F",
            "default": null,
            "access": "R",
            "conformance": "M",
            "summary": "This attribute SHALL indicate a list of fabric scoped information about scenes on this endpoint. The number of list entries for this attribute SHALL NOT exceed the number of supported fabrics by the device.",
            "fabric_sensitive": false,
            "scene_capable": false
          }
        ],
        "commands": [
          {
            "id": "0x00",
            "name": "AddScene",
            "direction": "client→server",
            "response": "AddSceneResponse",
            "access": "F",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the group identifier in the Group Table."
              },
              {
                "id": 1,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL indicate the scene identifier in the Scene Table."
              },
              {
                "id": 2,
                "name": "TransitionTime",
                "type": "uint32",
                "constraint": "max 60000000",
                "conformance": "M",
                "summary": "This field SHALL indicate the transition time of the scene, measured in milliseconds."
              },
              {
                "id": 3,
                "name": "SceneName",
                "type": "string",
                "constraint": "max 16",
                "conformance": "M",
                "summary": "This field SHALL indicate the name of the scene."
              },
              {
                "id": 4,
                "name": "ExtensionFieldSetStructs",
                "type": "list[ExtensionFieldSetStruct]",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL contains the list of extension fields."
              }
            ]
          },
          {
            "id": "0x00",
            "name": "AddSceneResponse",
            "direction": "server→client",
            "response": null,
            "access": "M",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Status",
                "type": "status",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL be set according to the Effect on Receipt section for AddScene command."
              },
              {
                "id": 1,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "The GroupID field SHALL be set to the corresponding field of the received AddScene command."
              },
              {
                "id": 2,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "The SceneID field SHALL be set to the corresponding field of the received AddScene command."
              }
            ]
          },
          {
            "id": "0x01",
            "name": "ViewScene",
            "direction": "client→server",
            "response": "ViewSceneResponse",
            "access": "F",
            "conformance": "O",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the group identifier in the Group Table."
              },
              {
                "id": 1,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL indicate the scene identifier in the Scene Table."
              }
            ]
          },
          {
            "id": "0x01",
            "name": "ViewSceneResponse",
            "direction": "server→client",
            "response": null,
            "access": "M",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Status",
                "type": "status",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL be set according to the Effect on Receipt section for ViewScene command."
              },
              {
                "id": 1,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "The GroupID field SHALL be set to the corresponding field of the received ViewScene command."
              },
              {
                "id": 2,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "The SceneID field SHALL be set to the corresponding field of the received ViewScene command."
              },
              {
                "id": 3,
                "name": "TransitionTime",
                "type": "uint32",
                "constraint": "max 60000000",
                "conformance": "M",
                "summary": "If the status is SUCCESS, this field SHALL be copied from the corresponding field in the Scene Table entry, otherwise it SHALL be omitted."
              },
              {
                "id": 4,
                "name": "SceneName",
                "type": "string",
                "constraint": "max 16",
                "conformance": "M",
                "summary": "If the status is SUCCESS, this field SHALL be copied from the corresponding field in the Scene Table entry, otherwise it SHALL be omitted."
              },
              {
                "id": 5,
                "name": "ExtensionFieldSetStructs",
                "type": "list[ExtensionFieldSetStruct]",
                "constraint": "desc",
                "conformance": "M",
                "summary": "If the status is SUCCESS, this field SHALL be copied from the corresponding field in the Scene Table entry, otherwise it SHALL be omitted."
              }
            ]
          },
          {
            "id": "0x02",
            "name": "RemoveScene",
            "direction": "client→server",
            "response": "RemoveSceneResponse",
            "access": "F",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the group identifier in the Group Table."
              },
              {
                "id": 1,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL indicate the scene identifier in the Scene Table."
              }
            ]
          },
          {
            "id": "0x02",
            "name": "RemoveSceneResponse",
            "direction": "server→client",
            "response": null,
            "access": "M",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Status",
                "type": "status",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL be set according to the Effect on Receipt section for RemoveScene command."
              },
              {
                "id": 1,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "The GroupID field SHALL be set to the corresponding field of the received RemoveScene command."
              },
              {
                "id": 2,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "The SceneID field SHALL be set to the corresponding field of the received RemoveScene command."
              }
            ]
          },
          {
            "id": "0x03",
            "name": "RemoveAllScenes",
            "direction": "client→server",
            "response": "RemoveAllScenesResponse",
            "access": "F",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the group identifier in the Group Table."
              }
            ]
          },
          {
            "id": "0x03",
            "name": "RemoveAllScenesResponse",
            "direction": "server→client",
            "response": null,
            "access": "M",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Status",
                "type": "status",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL be set according to the Effect on Receipt section for RemoveAllScenes command."
              },
              {
                "id": 1,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "The GroupID field SHALL be set to the corresponding field of the received RemoveAllScenes command."
              }
            ]
          },
          {
            "id": "0x04",
            "name": "StoreScene",
            "direction": "client→server",
            "response": "StoreSceneResponse",
            "access": "F",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the group identifier in the Group Table."
              },
              {
                "id": 1,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL indicate the scene identifier in the Scene Table."
              }
            ]
          },
          {
            "id": "0x04",
            "name": "StoreSceneResponse",
            "direction": "server→client",
            "response": null,
            "access": "M",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Status",
                "type": "status",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL be set according to the Effect on Receipt section for StoreScene command."
              },
              {
                "id": 1,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "The GroupID field SHALL be set to the corresponding field of the received StoreScene command."
              },
              {
                "id": 2,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "The SceneID field SHALL be set to the corresponding field of the received StoreScene command."
              }
            ]
          },
          {
            "id": "0x05",
            "name": "RecallScene",
            "direction": "client→server",
            "response": null,
            "access": "F",
            "conformance": "O",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the group identifier in the Group Table."
              },
              {
                "id": 1,
                "name": "SceneID",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL indicate the scene identifier in the Scene Table."
              },
              {
                "id": 2,
                "name": "TransitionTime",
                "type": "uint32",
                "constraint": "max 60000000",
                "conformance": "M",
                "summary": "This field SHALL indicate the transition time of the scene, measured in milliseconds."
              }
            ]
          },
          {
            "id": "0x06",
            "name": "GetSceneMembership",
            "direction": "client→server",
            "response": "GetSceneMembershipResponse",
            "access": "F",
            "conformance": "O",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the group identifier in the Group Table."
              }
            ]
          },
          {
            "id": "0x06",
            "name": "GetSceneMembershipResponse",
            "direction": "server→client",
            "response": null,
            "access": "M",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Status",
                "type": "status",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL be set according to the Effect on Receipt section for GetSceneMembership command."
              },
              {
                "id": 1,
                "name": "Capacity",
                "type": "uint8",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL contain the remaining capacity of the Scene Table of the server (for all groups for the accessing fabric). The following values apply:\n• 0 - No further scenes MAY be added.\n• 0 < Capacity < 0xFE - Capacity holds the number of scenes that MAY be added.\n• 0xFE - At least 1 further scene MAY be added (exact number is unknown)."
              },
              {
                "id": 2,
                "name": "GroupID",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL be set to the corresponding field of the received GetSceneMembership command."
              },
              {
                "id": 3,
                "name": "SceneList",
                "type": "list[uint8]",
                "constraint": "Status==Success",
                "conformance": "M",
                "summary": "If the status is not SUCCESS then this field SHALL be omitted, else this field SHALL contain the identifiers of all the scenes in the Scene Table with the corresponding Group ID."
              }
            ]
          },
          {
            "id": "0x40",
            "name": "CopyScene",
            "direction": "client→server",
            "response": "CopySceneResponse",
            "access": "F",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Mode",
                "type": "CopyModeBitmap",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL contain the information of how the scene copy is to proceed. The CopyAllScenes bit of the Mode indicates whether all scenes are to be copied. If this value is set to 1, all scenes are to be copied and the SceneIdentifierFrom and SceneIdentifierTo fields SHALL be ignored. Otherwise this bit is set to 0."
              },
              {
                "id": 1,
                "name": "GroupIdentifierFrom",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the identifier of the group from which the scene is to be copied. Together with the SceneIdentifierFrom field, this field uniquely identifies the scene to copy from the Scene Table."
              },
              {
                "id": 2,
                "name": "SceneIdentifierFrom",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL indicate the identifier of the scene from which the scene is to be copied. Together with the GroupIdentifierFrom field, this field uniquely identifies the scene to copy from the Scene Table."
              },
              {
                "id": 3,
                "name": "GroupIdentifierTo",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL indicate the identifier of the group to which the scene is to be copied. Together with the SceneIdentifierTo field, this field uniquely identifies the scene to copy to the Scene Table."
              },
              {
                "id": 4,
                "name": "SceneIdentifierTo",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL indicate the identifier of the scene to which the scene is to be copied. Together with the GroupIdentifierTo field, this field uniquely identifies the scene to copy to the Scene Table."
              }
            ]
          },
          {
            "id": "0x40",
            "name": "CopySceneResponse",
            "direction": "server→client",
            "response": null,
            "access": "M",
            "conformance": "O",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": 0,
                "name": "Status",
                "type": "status",
                "constraint": "desc",
                "conformance": "M",
                "summary": "This field SHALL be set according to the Effect on Receipt section for the CopyScene command."
              },
              {
                "id": 1,
                "name": "GroupIdentifierFrom",
                "type": "group-id",
                "constraint": "all",
                "conformance": "M",
                "summary": "This field SHALL be set to the same values as in the corresponding fields of the received CopyScene command."
              },
              {
                "id": 2,
                "name": "SceneIdentifierFrom",
                "type": "uint8",
                "constraint": "max 254",
                "conformance": "M",
                "summary": "This field SHALL be set to the same values as in the corresponding fields of the received CopyScene command."
              }
            ]
          }
        ],
        "events": [],
        "global_attributes": []
      },
      "metadata": {
        "source_pages": "39-60",
        "extraction_method": "RAG",
        "text_length": 52667,
        "section_number": "1.4",
        "category": "General"
      }
    },
    {
      "cluster_info": {
        "cluster_name": "On/Off",
        "cluster_id": "0x0006",
        "classification": {
          "hierarchy": "Base",
          "role": "Application",
          "scope": "Endpoint",
          "pics_code": "OO"
        },
        "revision_history": [
          {
            "revision": "1",
            "description": "Mandatory global ClusterRevision attribute added; CCB 1555"
          },
          {
            "revision": "2",
            "description": "ZLO 1.0: StartUpOnOff"
          },
          {
            "revision": "3",
            "description": "FeatureMap global attribute support with Level Control and Lighting feature"
          },
          {
            "revision": "4",
            "description": "New data model format and notation"
          },
          {
            "revision": "5",
            "description": "Addition of Dead Front behavior and associated FeatureMap entry"
          },
          {
            "revision": "6",
            "description": "Addition of OffOnly feature and associated FeatureMap entry"
          }
        ],
        "features": [
          {
            "bit": "0",
            "code": "LT",
            "name": "Lighting",
            "summary": "Behavior that supports lighting applications.",
            "conformance": "[!OFFONLY]",
            "dependencies": null
          },
          {
            "bit": "1",
            "code": "DF",
            "name": "DeadFrontBehavior",
            "summary": "Device has Dead Front behavior",
            "conformance": "[!OFFONLY]",
            "dependencies": null
          },
          {
            "bit": "2",
            "code": "OFFONLY",
            "name": "OffOnly",
            "summary": "Device supports the OffOnly feature",
            "conformance": "[!(LT | DF)]",
            "dependencies": null
          }
        ],
        "data_types": [
          {
            "name": "OnOffControlBitmap",
            "base_type": "map8",
            "constraint": null,
            "values": [
              {
                "value": "0",
                "name": "AcceptOnlyWhenOn",
                "summary": "Indicates a command is only accepted when in On state.",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "StartUpOnOffEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0",
                "name": "Off",
                "summary": "Set the OnOff attribute to FALSE",
                "conformance": "M"
              },
              {
                "value": "1",
                "name": "On",
                "summary": "Set the OnOff attribute to TRUE",
                "conformance": "M"
              },
              {
                "value": "2",
                "name": "Toggle",
                "summary": "If the previous value of the OnOff attribute is equal to FALSE, set the OnOff attribute to TRUE. If the previous value of the OnOff attribute is equal to TRUE, set the OnOff attribute to FALSE (toggle).",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "EffectIdentifierEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0x00",
                "name": "DelayedAllOff",
                "summary": "Delayed All Off",
                "conformance": "M"
              },
              {
                "value": "0x01",
                "name": "DyingLight",
                "summary": "Dying Light",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "DelayedAllOffEffectVariantEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0x00",
                "name": "DelayedOffFastFade",
                "summary": "Fade to off in 0.8 seconds",
                "conformance": "M"
              },
              {
                "value": "0x01",
                "name": "NoFade",
                "summary": "No fade",
                "conformance": "M"
              },
              {
                "value": "0x02",
                "name": "DelayedOffSlowFade",
                "summary": "50% dim down in 0.8 seconds then fade to off in 12 seconds",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "DyingLightEffectVariantEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0x00",
                "name": "DyingLightFadeOff",
                "summary": "20% dim up in 0.5s then fade to off in 1 second",
                "conformance": "M"
              }
            ]
          }
        ],
        "attributes": [
          {
            "id": "0x0000",
            "name": "OnOff",
            "type": "bool",
            "constraint": "all",
            "quality": "SN",
            "default": "FALSE",
            "access": "R V",
            "conformance": "M",
            "summary": "This attribute indicates whether the device type implemented on the endpoint is turned off or turned on, in these cases the value of the OnOff attribute equals FALSE, or TRUE respectively.",
            "fabric_sensitive": false,
            "scene_capable": true
          },
          {
            "id": "0x4000",
            "name": "GlobalSceneControl",
            "type": "bool",
            "constraint": "all",
            "quality": null,
            "default": "TRUE",
            "access": "R V",
            "conformance": "LT",
            "summary": "In order to support the use case where the user gets back the last setting of a set of devices (e.g. level settings for lights), a global scene is introduced which is stored when the devices are turned off and recalled when the devices are turned on. The global scene is defined as the scene that is stored with group identifier 0 and scene identifier 0. This attribute is defined in order to prevent a second Off command storing the all-devices-off situation as a global scene, and to prevent a second On command destroying the current settings by going back to the global scene. This attribute SHALL be set to TRUE after the reception of a command which causes the OnOff attribute to be set to TRUE, such as a standard On command, a MoveToLevel(WithOnOff) command, a RecallScene command or a OnWithRecallGlobalScene command. This attribute is set to FALSE after reception of a OffWithEffect command. These concepts are illustrated in Explanation of the Behavior of Store and Recall Global Scene functionality using a State Diagram.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x4001",
            "name": "OnTime",
            "type": "uint16",
            "constraint": "all",
            "quality": null,
            "default": "0",
            "access": "RW VO",
            "conformance": "LT",
            "summary": "This attribute specifies the length of time (in 1/10ths second) that the On state SHALL be maintained before automatically transitioning to the Off state when using the OnWithTimedOff command. This attribute can be written at any time, but writing a value only has effect when in the Timed On state. See OnWithTimedOff for more details.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x4002",
            "name": "OffWaitTime",
            "type": "uint16",
            "constraint": "all",
            "quality": null,
            "default": "0",
            "access": "RW VO",
            "conformance": "LT",
            "summary": "This attribute specifies the length of time (in 1/10ths second) that the Off state SHALL be guarded to prevent another OnWithTimedOff command turning the server back to its On state (e.g., when leaving a room, the lights are turned off but an occupancy sensor detects the leaving person and attempts to turn the lights back on). This attribute can be written at any time, but writing a value only has an effect when in the Timed On state followed by a transition to the Delayed Off state, or in the Delayed Off state. See OnWithTimedOff for more details.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x4003",
            "name": "StartUpOnOff",
            "type": "StartUpOnOffEnum",
            "constraint": "desc",
            "quality": "XN",
            "default": "MS",
            "access": "RW VM",
            "conformance": "LT",
            "summary": "This attribute SHALL define the desired startup behavior of a device when it is supplied with power and this state SHALL be reflected in the OnOff attribute. If the value is null, the OnOff attribute is set to its previous value. Otherwise, the behavior is defined in the table defining StartUpOnOffEnum. This behavior does not apply to reboots associated with OTA. After an OTA restart, the OnOff attribute SHALL return to its value prior to the restart.",
            "fabric_sensitive": false,
            "scene_capable": false
          }
        ],
        "commands": [
          {
            "id": "0x00",
            "name": "Off",
            "direction": "client⇒server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": "On receipt of the Off command, a server SHALL set the OnOff attribute to FALSE. Additionally, when the OnTime attribute is supported, the server SHALL set the OnTime attribute to 0.",
            "timing": null,
            "fields": []
          },
          {
            "id": "0x01",
            "name": "On",
            "direction": "client⇒server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "!OFFONLY",
            "summary": "If the OffOnly feature is supported, on receipt of the On command, an UNSUPPORTED_COMMAND failure status response SHALL be sent. Otherwise, on receipt of the On command, a server SHALL set the OnOff attribute to TRUE. Additionally, when the OnTime and OffWaitTime attributes are both supported, if the value of the OnTime attribute is equal to 0, the server SHALL set the OffWaitTime attribute to 0.",
            "timing": null,
            "fields": []
          },
          {
            "id": "0x02",
            "name": "Toggle",
            "direction": "client⇒server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "!OFFONLY",
            "summary": "If the OffOnly feature is supported, on receipt of the Toggle command, an UNSUPPORTED_COMMAND failure status response SHALL be sent. Otherwise, on receipt of the Toggle command, if the value of the OnOff attribute is equal to FALSE, the server SHALL set the OnOff attribute to TRUE, otherwise, the server SHALL set the OnOff attribute to FALSE. Additionally, when the OnTime and OffWaitTime attributes are both supported, if the value of the OnOff attribute is equal to FALSE and if the value of the OnTime attribute is equal to 0, the server SHALL set the OffWaitTime attribute to 0. If the value of the OnOff attribute is equal to TRUE, the server SHALL set the OnTime attribute to 0.",
            "timing": null,
            "fields": []
          },
          {
            "id": "0x40",
            "name": "OffWithEffect",
            "direction": "client⇒server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "LT",
            "summary": "The OffWithEffect command allows devices to be turned off using enhanced ways of fading.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "EffectIdentifier",
                "type": "EffectIdentifierEnum",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field specifies the fading effect to use when turning the device off. This field SHALL contain one of the non-reserved values listed in EffectIdentifierEnum."
              },
              {
                "id": "1",
                "name": "EffectVariant",
                "type": "enum8",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": "This field is used to indicate which variant of the effect, indicated in the EffectIdentifier field, SHOULD be triggered. If the server does not support the given variant, it SHALL use the default variant. This field is dependent on the value of the EffectIdentifier field and SHALL contain one of the non-reserved values listed in either DelayedAllOffEffectVariantEnum or DyingLightEffectVariantEnum."
              }
            ]
          },
          {
            "id": "0x41",
            "name": "OnWithRecallGlobalScene",
            "direction": "client⇒server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "LT",
            "summary": "This command allows the recall of the settings when the device was turned off.",
            "timing": null,
            "fields": []
          },
          {
            "id": "0x42",
            "name": "OnWithTimedOff",
            "direction": "client⇒server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "LT",
            "summary": "This command allows devices to be turned on for a specific duration with a guarded off duration so that SHOULD the device be subsequently turned off, further OnWithTimedOff commands, received during this time, are prevented from turning the devices back on. Further OnWithTimedOff commands received while the server is turned on, will update the period that the device is turned on.",
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "OnOffControl",
                "type": "OnOffControlBitmap",
                "constraint": "0 to 1",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field contains information on how the server is to be operated."
              },
              {
                "id": "1",
                "name": "OnTime",
                "type": "uint16",
                "constraint": "max 0xFFFE",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is used to adjust the value of the OnTime attribute."
              },
              {
                "id": "2",
                "name": "OffWaitTime",
                "type": "uint16",
                "constraint": "max 0xFFFE",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field is used to adjust the value of the OffWaitTime attribute."
              }
            ]
          }
        ],
        "events": [],
        "global_attributes": []
      },
      "metadata": {
        "source_pages": "60-70",
        "extraction_method": "RAG",
        "text_length": 29362,
        "section_number": "1.5",
        "category": "General"
      }
    },
    {
      "cluster_info": {
        "cluster_name": "Level Control",
        "cluster_id": "0x0008",
        "classification": {
          "hierarchy": "Base",
          "role": "Application",
          "scope": "Endpoint",
          "pics_code": "LVL"
        },
        "revision_history": [
          {
            "revision": "1",
            "description": "Mandatory global ClusterRevision attribute added"
          },
          {
            "revision": "2",
            "description": "Added Options attribute, state change table; ZLO 1.0; Base cluster (no change) CCB 2085 1775 2281 2147"
          },
          {
            "revision": "3",
            "description": "CCB 2574 2616 2659 2702 2814 2818 2819 2898"
          },
          {
            "revision": "4",
            "description": "FeatureMap support with On/Off, Lighting and Frequency features"
          },
          {
            "revision": "5",
            "description": "New data model format and notation"
          },
          {
            "revision": "6",
            "description": "Added Q quality for CurrentLevel, CurrentFrequency and RemainingTime attributes, added clarifications for behavior related to Step value and adjusted constraint of DefaultMoveRate"
          }
        ],
        "features": [
          {
            "bit": "0",
            "code": "OO",
            "name": "OnOff",
            "summary": "Dependency with the On/Off cluster",
            "conformance": "O",
            "dependencies": "On/Off cluster"
          },
          {
            "bit": "1",
            "code": "LT",
            "name": "Lighting",
            "summary": "Behavior that supports lighting applications",
            "conformance": "O",
            "dependencies": null
          },
          {
            "bit": "2",
            "code": "FQ",
            "name": "Frequency",
            "summary": "Supports frequency attributes and behavior.",
            "conformance": "P",
            "dependencies": null
          }
        ],
        "data_types": [
          {
            "name": "OptionsBitmap",
            "base_type": "map8",
            "constraint": null,
            "values": [
              {
                "value": "0",
                "name": "ExecuteIfOff",
                "summary": "Dependency on On/Off cluster",
                "conformance": "LT | OO"
              },
              {
                "value": "1",
                "name": "CoupleColorTempToLevel",
                "summary": "Dependency on Color Control cluster",
                "conformance": "LT"
              }
            ]
          },
          {
            "name": "MoveModeEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0",
                "name": "Up",
                "summary": "Increase the level",
                "conformance": "M"
              },
              {
                "value": "1",
                "name": "Down",
                "summary": "Decrease the level",
                "conformance": "M"
              }
            ]
          },
          {
            "name": "StepModeEnum",
            "base_type": "enum8",
            "constraint": null,
            "values": [
              {
                "value": "0",
                "name": "Up",
                "summary": "Step upwards",
                "conformance": "M"
              },
              {
                "value": "1",
                "name": "Down",
                "summary": "Step downwards",
                "conformance": "M"
              }
            ]
          }
        ],
        "attributes": [
          {
            "id": "0x0000",
            "name": "CurrentLevel",
            "type": "uint8",
            "constraint": "MinLevel to MaxLevel",
            "quality": "S N X Q",
            "default": "null",
            "access": "R V",
            "conformance": "M",
            "summary": "This attribute SHALL indicate the current level of this device. The meaning of 'level' is device dependent. Changes to this attribute SHALL only be marked as reportable in the following cases: • At most once per second, or • At the end of the movement/transition, or • When it changes from null to any other value and vice versa.",
            "fabric_sensitive": false,
            "scene_capable": true
          },
          {
            "id": "0x0001",
            "name": "RemainingTime",
            "type": "uint16",
            "constraint": "all",
            "quality": "Q",
            "default": "0",
            "access": "R V",
            "conformance": "LT",
            "summary": "This attribute SHALL indicate the time remaining until the current command is complete - it is specified in 1/10ths of a second. Changes to this attribute SHALL only be marked as reportable in the following cases: • When it changes from 0 to any value higher than 10, or • When it changes, with a delta larger than 10, caused by the invoke of a command, or • When it changes to 0. For commands with a transition time or changes to the transition time less than 1 second, changes to this attribute SHALL NOT be reported. As this attribute is not being reported during a regular countdown, clients SHOULD NOT rely on the reporting of this attribute in order to keep track of the remaining duration.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0002",
            "name": "MinLevel",
            "type": "uint8",
            "constraint": "1 to 254",
            "quality": "1",
            "default": "0",
            "access": "R V",
            "conformance": "[LT]",
            "summary": "This attribute SHALL indicate the minimum value of CurrentLevel that is capable of being assigned.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0002",
            "name": "MinLevel",
            "type": "uint8",
            "constraint": "max 254",
            "quality": null,
            "default": "0",
            "access": "R V",
            "conformance": "[!LT]",
            "summary": "This attribute SHALL indicate the minimum value of CurrentLevel that is capable of being assigned.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0003",
            "name": "MaxLevel",
            "type": "uint8",
            "constraint": "MinLevel to 254",
            "quality": null,
            "default": "254",
            "access": "R V",
            "conformance": "O",
            "summary": "This attribute SHALL indicate the maximum value of CurrentLevel that is capable of being assigned.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0004",
            "name": "CurrentFrequency",
            "type": "uint16",
            "constraint": "MinFrequency to MaxFrequency",
            "quality": "P S Q",
            "default": "0",
            "access": "R V",
            "conformance": "FQ",
            "summary": "This attribute SHALL indicate the frequency at which the device is at CurrentLevel. A CurrentFrequency of 0 is unknown. Changes to this attribute SHALL only be marked as reportable in the following cases: • At most once per second, or",
            "fabric_sensitive": false,
            "scene_capable": true
          },
          {
            "id": "0x0005",
            "name": "MinFrequency",
            "type": "uint16",
            "constraint": "all",
            "quality": null,
            "default": "0",
            "access": "R V",
            "conformance": "FQ",
            "summary": "This attribute SHALL indicate the minimum value of CurrentFrequency that is capable of being assigned. MinFrequency SHALL be less than or equal to MaxFrequency. A value of 0 indicates undefined.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0006",
            "name": "MaxFrequency",
            "type": "uint16",
            "constraint": "min MinFrequency",
            "quality": null,
            "default": "0",
            "access": "R V",
            "conformance": "FQ",
            "summary": "This attribute SHALL indicate the maximum value of CurrentFrequency that is capable of being assigned. MaxFrequency SHALL be greater than or equal to MinFrequency. A value of 0 indicates undefined.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0010",
            "name": "OnOffTransitionTime",
            "type": "uint16",
            "constraint": "all",
            "quality": null,
            "default": "0",
            "access": "RW VO",
            "conformance": "O",
            "summary": "This attribute SHALL indicate the time taken to move to or from the target level when On or Off commands are received by an On/Off cluster on the same endpoint. It is specified in 1/10ths of a second. The actual time taken SHOULD be as close to OnOffTransitionTime as the device is able. Please note that if the device is not able to move at a variable rate, the OnOffTransitionTime attribute SHOULD NOT be implemented.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0011",
            "name": "OnLevel",
            "type": "uint8",
            "constraint": "MinLevel to MaxLevel",
            "quality": "X",
            "default": "null",
            "access": "RW VO",
            "conformance": "M",
            "summary": "This attribute SHALL indicate the value that the CurrentLevel attribute is set to when the OnOff attribute of an On/Off cluster on the same endpoint is set to TRUE, as a result of processing an On/Off cluster command. If the OnLevel attribute is not implemented, or is set to the null value, it has no effect. For more details see Effect of On/Off Commands on the CurrentLevel attribute. OnLevel represents a mandatory field that was previously not present or optional. Implementers should be aware that older devices may not implement it.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0012",
            "name": "OnTransitionTime",
            "type": "uint16",
            "constraint": "all",
            "quality": "X",
            "default": "null",
            "access": "RW VO",
            "conformance": "O",
            "summary": "This attribute SHALL indicate the time taken to move the current level from the minimum level to the maximum level when an On command is received by an On/Off cluster on the same endpoint. It is specified in 1/10ths of a second. If this attribute is not implemented, or contains a null value, the OnOffTransitionTime SHALL be used instead.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0013",
            "name": "OffTransitionTime",
            "type": "uint16",
            "constraint": "all",
            "quality": "X",
            "default": "null",
            "access": "RW VO",
            "conformance": "O",
            "summary": "This attribute SHALL indicate the time taken to move the current level from the maximum level to the minimum level when an Off command is received by an On/Off cluster on the same endpoint. It is specified in 1/10ths of a second. If this attribute is not implemented, or contains a null value, the OnOffTransitionTime SHALL be used instead.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x0014",
            "name": "DefaultMoveRate",
            "type": "uint8",
            "constraint": "min 1",
            "quality": "X",
            "default": "MS",
            "access": "RW VO",
            "conformance": "O",
            "summary": "This attribute SHALL indicate the movement rate, in units per second, when a Move command is received with a null value Rate parameter.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x000F",
            "name": "Options",
            "type": "OptionsBitmap",
            "constraint": "desc",
            "quality": null,
            "default": "0",
            "access": "RW VO",
            "conformance": "M",
            "summary": "This attribute SHALL indicate the selected options of the device. The Options attribute is a bitmap that determines the default behavior of some cluster commands. Each command that is dependent on the Options attribute SHALL first construct a temporary Options bitmap that is in effect during the command processing. The temporary Options bitmap has the same format and meaning as the Options attribute, but includes any bits that may be overridden by command fields. This attribute is meant to be changed only during commissioning.",
            "fabric_sensitive": false,
            "scene_capable": false
          },
          {
            "id": "0x4000",
            "name": "StartUpCurrentLevel",
            "type": "uint8",
            "constraint": "desc",
            "quality": "XN",
            "default": "MS",
            "access": "RW VM",
            "conformance": "LT",
            "summary": "This attribute SHALL indicate the desired startup level for a device when it is supplied with power and this level SHALL be reflected in the CurrentLevel attribute. The values of the StartUpCurrentLevel attribute are listed below: Value Action on power up 0 Set the CurrentLevel attribute to the minimum value permitted on the device",
            "fabric_sensitive": false,
            "scene_capable": false
          }
        ],
        "commands": [
          {
            "id": "0x00",
            "name": "MoveToLevel",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "Level",
                "type": "uint8",
                "constraint": "max 254",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "1",
                "name": "TransitionTime",
                "type": "uint16",
                "constraint": "all",
                "quality": "X",
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "2",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "3",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x01",
            "name": "Move",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "MoveMode",
                "type": "MoveModeEnum",
                "constraint": null,
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "1",
                "name": "Rate",
                "type": "uint8",
                "constraint": null,
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "2",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "3",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x02",
            "name": "Step",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "StepMode",
                "type": "StepModeEnum",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL be one of the non-reserved values in StepModeEnum."
              },
              {
                "id": "1",
                "name": "StepSize",
                "type": "uint8",
                "constraint": "all",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL indicate the change to CurrentLevel."
              },
              {
                "id": "2",
                "name": "TransitionTime",
                "type": "uint16",
                "constraint": "all",
                "quality": "X",
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL indicate the time that SHALL be taken to perform the step, in tenths of a second. A step is a change in the CurrentLevel of StepSize units. The actual time taken SHOULD be as close to this as the device is able. If the TransitionTime field is equal to null, the device SHOULD move as fast as it is able. If the device is not able to move at a variable rate, the TransitionTime field MAY be disregarded."
              },
              {
                "id": "3",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "4",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x03",
            "name": "Stop",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "1",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x04",
            "name": "MoveToLevelWithOnOff",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "Level",
                "type": "uint8",
                "constraint": "max 254",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "1",
                "name": "TransitionTime",
                "type": "uint16",
                "constraint": "all",
                "quality": "X",
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "2",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "3",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x05",
            "name": "MoveWithOnOff",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "MoveMode",
                "type": "MoveModeEnum",
                "constraint": null,
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "1",
                "name": "Rate",
                "type": "uint8",
                "constraint": null,
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": null
              },
              {
                "id": "2",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "3",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x06",
            "name": "StepWithOnOff",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "StepMode",
                "type": "StepModeEnum",
                "constraint": "desc",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL be one of the non-reserved values in StepModeEnum."
              },
              {
                "id": "1",
                "name": "StepSize",
                "type": "uint8",
                "constraint": "all",
                "quality": null,
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL indicate the change to CurrentLevel."
              },
              {
                "id": "2",
                "name": "TransitionTime",
                "type": "uint16",
                "constraint": "all",
                "quality": "X",
                "default": null,
                "conformance": "M",
                "summary": "This field SHALL indicate the time that SHALL be taken to perform the step, in tenths of a second. A step is a change in the CurrentLevel of StepSize units. The actual time taken SHOULD be as close to this as the device is able. If the TransitionTime field is equal to null, the device SHOULD move as fast as it is able. If the device is not able to move at a variable rate, the TransitionTime field MAY be disregarded."
              },
              {
                "id": "3",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "4",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x07",
            "name": "StopWithOnOff",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "M",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "OptionsMask",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              },
              {
                "id": "1",
                "name": "OptionsOverride",
                "type": "OptionsBitmap",
                "constraint": "desc",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          },
          {
            "id": "0x08",
            "name": "MoveToClosestFrequency",
            "direction": "client ⇒ server",
            "response": "DefaultResponse",
            "access": "O",
            "conformance": "FQ",
            "summary": null,
            "timing": null,
            "fields": [
              {
                "id": "0",
                "name": "Frequency",
                "type": "uint16",
                "constraint": "all",
                "quality": null,
                "default": "0",
                "conformance": "M",
                "summary": null
              }
            ]
          }
        ],
        "events": [],
        "global_attributes": []
      },
      "metadata": {
        "source_pages": "70-85",
        "extraction_method": "RAG",
        "text_length": 37535,
        "section_number": "1.6",
        "category": "General"
      }
    }
  ]
}